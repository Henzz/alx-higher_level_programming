# 2-matrix_divided.txt

# Test matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...	[3, 6, 9],
...	[12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) if integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) if integers/floats

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

>>> matrix = [1, 2, 4]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) if integers/floats

>>> matrix = [
...	[1, 2, 3, 4],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...	[1, 2, 3],
...	[4, "not a number", 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) if integers/floats

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
